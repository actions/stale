name: NodeJS with Grunt

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build
      run: |
        npm install
        grunt
Skip to content
Search or jump toâ€¦
Pull requests
Issues
Codespaces
Marketplace
Explore
 
@zakwarlord7 
Your account has been flagged.
Because of that, your profile is hidden from the public. If you believe this is a mistake, contact support to have your account status reviewed.
zakwarlord7
/
slate.yml
Public
forked from actions/stale
Code
Pull requests
Actions
Projects
Wiki
Security
Insights
Settings
Merge branch 'actions:main' into main
 main
@zakwarlord7
zakwarlord7 committed 5 hours ago 
2 parents d4192f5 + faa6c15 commit 458b6cddd62730d8bd873d3fde410b897383168e
Show file tree Hide file tree
Showing 49 changed files with 1,739 additions and 1,634 deletions.
 35  
.github/ISSUE_TEMPLATE/bug_report.md
@@ -0,0 +1,35 @@
---
name: Bug report
about: Create a bug report
title: ''
labels: bug, needs triage
assignees: ''

---

<!--- Please direct any generic questions related to actions to our support community forum at https://github.com/orgs/community/discussions --->
<!--- Before opening up a new bug report, please make sure to check for similar existing issues -->

**Description:**
A clear and concise description of what the bug is.

**Action version:**
Specify the action version

**Platform:**
- [ ] Ubuntu
- [ ] macOS
- [ ] Windows

**Runner type:**
- [ ] Hosted
- [ ] Self-hosted

**Repro steps:**  
A description with steps to reproduce the issue. If your have a public example or repo to share, please provide the link.

**Expected behavior:**
A description of what you expected to happen.

**Actual behavior:**
A description of what is actually happening.
 16  
.github/ISSUE_TEMPLATE/feature-request.md
@@ -1,11 +1,19 @@
---	---
name: Feature request	name: Feature request
about: Propose a new feature or an enhancement	about: Suggest an idea for this project
title: ''	title: ''
labels: enhancement	labels: feature request, needs triage
assignees: ''	assignees: ''
---	---


## The problem	<!--- Please direct any generic questions related to actions to our support community forum at https://github.com/orgs/community/discussions --->
<!--- Before opening up a new bug report, please make sure to check for similar existing issues -->


## The solution	**Description:**
Describe your proposal.

**Justification:**
Justification or a use case for your proposal.

**Are you willing to submit a PR?**
<!--- We accept contributions! -->
 13  
.github/ISSUE_TEMPLATE/other_issue_report.md
@@ -1,13 +0,0 @@
---	
name: Other issue report	
about: Report other issue	
title: ''	
labels: bug	
assignees: ''	
---	

## Describe your issue	

## Further context	

<!-- If helpful please provide screenshots, logs, links to other related issues. -->	
 28  
.github/ISSUE_TEMPLATE/stale_issue_report.md
@@ -1,28 +0,0 @@
---	
name: Stale issue report	
about: Report issues with using the stale action	
title: ''	
labels: bug	
assignees: ''	
---	

<!-- Have you tried the [debugging](https://github.com/actions/stale#debugging) section of the readme? -->	

## Describe your issue	

## Your stale action configuration	

<!-- This is an example config, please copy/paste your config into it. -->	

```yml	
jobs:	
  stale:	
    runs-on: ...	
    steps:	
      - uses: actions/stale@...	
        with: ...	
```	

## Further context	

<!-- If helpful please provide screenshots, logs, links to other related issues. -->	
 15  
.github/pull_request_template.md
@@ -1,10 +1,9 @@
<!-- List the change(s) you're making with this PR. -->	**Description:**
Describe your changes.


## Changes	**Related issue:**
Add link to the related issue.


- [x] ...	**Check list:**

- [ ] Mark if documentation changes are required.
## Context	- [ ] Mark if tests were added or updated to cover the changes.

<!-- Explain why you're making the change(s). -->	
<!-- If you're closing an issue with this PR, [link them with a keyword](https://docs.github.com/en/github/managing-your-work-on-github/linking-a-pull-request-to-an-issue#linking-a-pull-request-to-an-issue-using-a-keyword). -->	
 17  
.github/workflows/basic-validation.yml
@@ -0,0 +1,17 @@
name: Basic validation

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
      - releases/*
    paths-ignore:
      - '**.md'

jobs:
  call-basic-validation:
    name: Basic validation
    uses: actions/reusable-workflows/.github/workflows/basic-validation.yml@main
  42  
.github/workflows/check-dist.yml
@@ -1,8 +1,3 @@
# `dist/index.js` is a special file in Actions.	
# When you reference an action with `uses:` in a workflow,	
# `index.js` is the code that will run.	
# For our project, we generate this file through a build process from other source files.	
# We need to make sure the checked-in `index.js` actually matches what we expect it to be.	
name: Check dist/	name: Check dist/


on:	on:
@@ -17,37 +12,6 @@ on:
  workflow_dispatch:	  workflow_dispatch:


jobs:	jobs:
  check-dist:	  call-check-dist:
    runs-on: ubuntu-latest	    name: Check dist/

    uses: actions/reusable-workflows/.github/workflows/check-dist.yml@main
    steps:	
      - uses: actions/checkout@v3	

      - name: Set Node.js 16.x	
        uses: actions/setup-node@v3	
        with:	
          node-version: 16.x	

      - name: Install dependencies	
        run: npm ci	

      - name: Rebuild the dist/ directory	
        run: |	
          npm run build	
          npm run pack	
      - name: Compare the expected and actual dist/ directories	
        run: |	
          if [ "$(git diff --ignore-space-at-eol dist/ | wc -l)" -gt "0" ]; then	
            echo "Detected uncommitted changes after build.  See status below:"	
            git diff	
            exit 1	
          fi	
        id: diff	

      # If index.js was different than expected, upload the expected version as an artifact	
      - uses: actions/upload-artifact@v3	
        if: ${{ failure() && steps.diff.conclusion == 'failure' }}	
        with:	
          name: dist	
          path: dist/	
 14  
.github/workflows/codeql-analysis.yml
@@ -0,0 +1,14 @@
name: 'Code scanning'

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 3 * * 0'

jobs:
  call-codeQL-analysis:
    name: CodeQL analysis
    uses: actions/reusable-workflows/.github/workflows/codeql-analysis.yml@main
 25  
.github/workflows/codeql.yml
This file was deleted.

 26  
.github/workflows/e2e-tests.yml
@@ -0,0 +1,26 @@
name: e2e tests

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    branches:
      - main
      - releases/*
    paths-ignore:
      - '**.md'

jobs:
  dry-run-test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./
        id: stale
        with:
          stale-issue-message: 'This issue is stale'
          stale-pr-message: 'This PR is stale'
          debug-only: true
      - name: Print outputs
        run: echo ${{ format('{0},{1}', toJSON(steps.stale.outputs.staled-issues-prs), toJSON(steps.stale.outputs.closed-issues-prs)) }}
 20  
.github/workflows/licensed.off
This file was deleted.

 15  
.github/workflows/licensed.yml
@@ -0,0 +1,15 @@
name: Licensed

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  call-licensed:
    name: Licensed
    uses: actions/reusable-workflows/.github/workflows/licensed.yml@main
 28  
.github/workflows/release-new-action-version.yml
@@ -0,0 +1,28 @@
name: Release new action version

on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      TAG_NAME:
        description: 'Tag name that the major tag will point to'
        required: true

env:
  TAG_NAME: ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }}
permissions:
  contents: write

jobs:
  update_tag:
    name: Update the major tag to include the ${{ github.event.inputs.TAG_NAME || github.event.release.tag_name }} changes
    environment:
      name: releaseNewActionVersion
    runs-on: ubuntu-latest
    steps:
      - name: Update the ${{ env.TAG_NAME }} tag
        uses: actions/publish-action@v0.2.1
        with:
          source-tag: ${{ env.TAG_NAME }}
          slack-webhook: ${{ secrets.SLACK_WEBHOOK }}
 19  
.github/workflows/stale.yml
@@ -1,19 +0,0 @@
name: 'Stale issue handler'	
on:	
  workflow_dispatch:	
  schedule:	
    - cron: '0 0 * * *'	

jobs:	
  stale:	
    runs-on: ubuntu-latest	
    steps:	
      - uses: actions/stale@main	
        id: stale	
        with:	
          stale-issue-message: 'This issue is stale because it has been open 30 days with no activity. Remove stale label or comment or this will be closed in 5 days'	
          days-before-stale: 30	
          days-before-close: 5	
          exempt-issue-labels: 'blocked,must,should,keep'	
      - name: Print outputs	
        run: echo ${{ join(steps.stale.outputs.*, ',') }}	
 28  
.github/workflows/test.yml
@@ -1,28 +0,0 @@
name: 'Build'	
on: # rebuild any PRs and main branch changes	
  pull_request:	
  push:	
    branches:	
      - main	
      - 'releases/*'	

jobs:	
  build: # make sure build/ci work properly	
    runs-on: ubuntu-latest	
    steps:	
      - uses: actions/checkout@v3	
      - run: |	
          npm ci	
          npm run all:ci	
  test: # make sure the action works on a clean machine without building	
    runs-on: ubuntu-latest	
    steps:	
      - uses: actions/checkout@v3	
      - uses: ./	
        id: stale	
        with:	
          stale-issue-message: 'This issue is stale'	
          stale-pr-message: 'This PR is stale'	
          debug-only: true	
      - name: Print outputs	
        run: echo ${{ join(steps.stale.outputs.*, ',') }}	
 2  
.licenses/npm/@actions/core.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@actions/core"	name: "@actions/core"
version: 1.2.4	version: 1.10.0
type: npm	type: npm
summary: Actions core lib	summary: Actions core lib
homepage: https://github.com/actions/toolkit/tree/master/packages/core	homepage: https://github.com/actions/toolkit/tree/master/packages/core
 2  
.licenses/npm/@actions/github.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@actions/github"	name: "@actions/github"
version: 4.0.0	version: 5.0.1
type: npm	type: npm
summary: Actions github lib	summary: Actions github lib
homepage: https://github.com/actions/toolkit/tree/master/packages/github	homepage: https://github.com/actions/toolkit/tree/master/packages/github
 32  
.licenses/npm/@actions/http-client-1.0.11.dep.yml
@@ -0,0 +1,32 @@
---
name: "@actions/http-client"
version: 1.0.11
type: npm
summary: Actions Http Client
homepage: https://github.com/actions/http-client#readme
license: mit
licenses:
- sources: LICENSE
  text: |
    Actions Http Client for Node.js
    Copyright (c) GitHub, Inc.
    All rights reserved.
    MIT License
    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
    associated documentation files (the "Software"), to deal in the Software without restriction,
    including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense,
    and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so,
    subject to the following conditions:
    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
    THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT
    LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
    NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
    WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
notices: []
 2  
.licenses/npm/@actions/http-client.dep.yml â†’ ...es/npm/@actions/http-client-2.0.1.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@actions/http-client"	name: "@actions/http-client"
version: 1.0.8	version: 2.0.1
type: npm	type: npm
summary: Actions Http Client	summary: Actions Http Client
homepage: https://github.com/actions/http-client#readme	homepage: https://github.com/actions/http-client#readme
 2  
.licenses/npm/@octokit/auth-token.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@octokit/auth-token"	name: "@octokit/auth-token"
version: 2.4.2	version: 2.5.0
type: npm	type: npm
summary: GitHub API token authentication for browsers and Node.js	summary: GitHub API token authentication for browsers and Node.js
homepage: https://github.com/octokit/auth-token.js#readme	homepage: https://github.com/octokit/auth-token.js#readme
 2  
.licenses/npm/@octokit/core.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@octokit/core"	name: "@octokit/core"
version: 3.1.1	version: 3.6.0
type: npm	type: npm
summary: Extendable client for GitHub's REST & GraphQL APIs	summary: Extendable client for GitHub's REST & GraphQL APIs
homepage: https://github.com/octokit/core.js#readme	homepage: https://github.com/octokit/core.js#readme
 2  
.licenses/npm/@octokit/endpoint.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@octokit/endpoint"	name: "@octokit/endpoint"
version: 6.0.5	version: 6.0.12
type: npm	type: npm
summary: Turns REST API endpoints into generic request options	summary: Turns REST API endpoints into generic request options
homepage: https://github.com/octokit/endpoint.js#readme	homepage: https://github.com/octokit/endpoint.js#readme
 2  
.licenses/npm/@octokit/graphql.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@octokit/graphql"	name: "@octokit/graphql"
version: 4.5.2	version: 4.8.0
type: npm	type: npm
summary: GitHub GraphQL API client for browsers and Node	summary: GitHub GraphQL API client for browsers and Node
homepage: https://github.com/octokit/graphql.js#readme	homepage: https://github.com/octokit/graphql.js#readme
 14  
...s/npm/@octokit/plugin-request-log.dep.yml â†’ .licenses/npm/@octokit/openapi-types.dep.yml
@@ -1,18 +1,18 @@
---	---
name: "@octokit/plugin-request-log"	name: "@octokit/openapi-types"
version: 1.0.0	version: 11.2.0
type: npm	type: npm
summary: Log all requests and request errors	summary: Generated TypeScript definitions based on GitHub's OpenAPI spec for api.github.com
homepage: https://github.com/octokit/plugin-request-log.js#readme	homepage: 
license: mit	license: mit
licenses:	licenses:
- sources: LICENSE	- sources: LICENSE
  text: |	  text: |-
    MIT License Copyright (c) 2020 Octokit contributors	    Copyright 2020 Gregor Martynus
    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:	    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
    The above copyright notice and this permission notice (including the next paragraph) shall be included in all copies or substantial portions of the Software.	    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- sources: README.md	- sources: README.md
 2  
.licenses/npm/@octokit/plugin-paginate-rest.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@octokit/plugin-paginate-rest"	name: "@octokit/plugin-paginate-rest"
version: 2.2.4	version: 2.17.0
type: npm	type: npm
summary: Octokit plugin to paginate REST API endpoint responses	summary: Octokit plugin to paginate REST API endpoint responses
homepage: https://github.com/octokit/plugin-paginate-rest.js#readme	homepage: https://github.com/octokit/plugin-paginate-rest.js#readme
 2  
...lugin-rest-endpoint-methods-4.1.1.dep.yml â†’ ...okit/plugin-rest-endpoint-methods.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@octokit/plugin-rest-endpoint-methods"	name: "@octokit/plugin-rest-endpoint-methods"
version: 4.1.1	version: 5.13.0
type: npm	type: npm
summary: Octokit plugin adding one method for all of api.github.com REST API endpoints	summary: Octokit plugin adding one method for all of api.github.com REST API endpoints
homepage: https://github.com/octokit/plugin-rest-endpoint-methods.js#readme	homepage: https://github.com/octokit/plugin-rest-endpoint-methods.js#readme
 2  
.licenses/npm/@octokit/request-error.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@octokit/request-error"	name: "@octokit/request-error"
version: 2.0.2	version: 2.1.0
type: npm	type: npm
summary: Error class for Octokit request errors	summary: Error class for Octokit request errors
homepage: https://github.com/octokit/request-error.js#readme	homepage: https://github.com/octokit/request-error.js#readme
 2  
.licenses/npm/@octokit/request.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@octokit/request"	name: "@octokit/request"
version: 5.4.7	version: 5.6.3
type: npm	type: npm
summary: Send parameterized requests to GitHubâ€™s APIs with sensible defaults in browsers	summary: Send parameterized requests to GitHubâ€™s APIs with sensible defaults in browsers
  and Node	  and Node
 2  
.licenses/npm/@octokit/types.dep.yml
@@ -1,6 +1,6 @@
---	---
name: "@octokit/types"	name: "@octokit/types"
version: 5.1.2	version: 6.34.0
type: npm	type: npm
summary: Shared TypeScript definitions for Octokit projects	summary: Shared TypeScript definitions for Octokit projects
homepage: https://github.com/octokit/types.ts#readme	homepage: https://github.com/octokit/types.ts#readme
 32  
.licenses/npm/@types/node.dep.yml
@@ -1,32 +0,0 @@
---	
name: "@types/node"	
version: 14.6.0	
type: npm	
summary: TypeScript definitions for Node.js	
homepage: https://github.com/DefinitelyTyped/DefinitelyTyped#readme	
license: mit	
licenses:	
- sources: LICENSE	
  text: |2	
        MIT License	
        Copyright (c) Microsoft Corporation.	
        Permission is hereby granted, free of charge, to any person obtaining a copy	
        of this software and associated documentation files (the "Software"), to deal	
        in the Software without restriction, including without limitation the rights	
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell	
        copies of the Software, and to permit persons to whom the Software is	
        furnished to do so, subject to the following conditions:	
        The above copyright notice and this permission notice shall be included in all	
        copies or substantial portions of the Software.	
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR	
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,	
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE	
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER	
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,	
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE	
        SOFTWARE	
notices: []	
 2  
.licenses/npm/before-after-hook.dep.yml
@@ -1,6 +1,6 @@
---	---
name: before-after-hook	name: before-after-hook
version: 2.1.0	version: 2.2.2
type: npm	type: npm
summary: asynchronous before/error/after hooks for internal functionality	summary: asynchronous before/error/after hooks for internal functionality
homepage: https://github.com/gr2m/before-after-hook#readme	homepage: https://github.com/gr2m/before-after-hook#readme
 2  
.licenses/npm/is-plain-object.dep.yml
@@ -1,6 +1,6 @@
---	---
name: is-plain-object	name: is-plain-object
version: 4.1.1	version: 5.0.0
type: npm	type: npm
summary: Returns true if an object was created by the `Object` constructor, or Object.create(null).	summary: Returns true if an object was created by the `Object` constructor, or Object.create(null).
homepage: https://github.com/jonschlinkert/is-plain-object	homepage: https://github.com/jonschlinkert/is-plain-object
 58  
.licenses/npm/lodash.deburr.dep.yml
@@ -0,0 +1,58 @@
---
name: lodash.deburr
version: 4.1.0
type: npm
summary: The lodash method `_.deburr` exported as a module.
homepage: https://lodash.com/
license: mit
licenses:
- sources: LICENSE
  text: |
    Copyright jQuery Foundation and other contributors <https://jquery.org/>
    Based on Underscore.js, copyright Jeremy Ashkenas,
    DocumentCloud and Investigative Reporters & Editors <http://underscorejs.org/>
    This software consists of voluntary contributions made by many
    individuals. For exact contribution history, see the revision history
    available at https://github.com/lodash/lodash
    The following license applies to all parts of this software except as
    documented below:
    ====
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be
    included in all copies or substantial portions of the Software.
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
    EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
    NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
    LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
    OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
    WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
    ====
    Copyright and related rights for sample code are waived via CC0. Sample
    code is defined as all source code displayed within the prose of the
    documentation.
    CC0: http://creativecommons.org/publicdomain/zero/1.0/
    ====
    Files located in the node_modules and vendor directories are externally
    maintained libraries used by this software which have their own
    licenses; we recommend you read them, as their terms may differ from the
    terms above.
notices: []
 26  
.licenses/npm/lru-cache.dep.yml
@@ -0,0 +1,26 @@
---
name: lru-cache
version: 6.0.0
type: npm
summary: A cache object that deletes the least-recently-used items.
homepage: 
license: isc
licenses:
- sources: LICENSE
  text: |
    The ISC License
    Copyright (c) Isaac Z. Schlueter and Contributors
    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted, provided that the above
    copyright notice and this permission notice appear in all copies.
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
    IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
notices: []
 6  
.licenses/npm/node-fetch.dep.yml
@@ -1,6 +1,6 @@
---	---
name: node-fetch	name: node-fetch
version: 2.6.0	version: 2.6.7
type: npm	type: npm
summary: A light-weight module that brings window.fetch to node.js	summary: A light-weight module that brings window.fetch to node.js
homepage: https://github.com/bitinn/node-fetch	homepage: https://github.com/bitinn/node-fetch
@@ -42,6 +42,10 @@ licenses:
    [codecov-url]: https://codecov.io/gh/bitinn/node-fetch	    [codecov-url]: https://codecov.io/gh/bitinn/node-fetch
    [install-size-image]: https://flat.badgen.net/packagephobia/install/node-fetch	    [install-size-image]: https://flat.badgen.net/packagephobia/install/node-fetch
    [install-size-url]: https://packagephobia.now.sh/result?p=node-fetch	    [install-size-url]: https://packagephobia.now.sh/result?p=node-fetch
    [discord-image]: https://img.shields.io/discord/619915844268326952?color=%237289DA&label=Discord&style=flat-square
    [discord-url]: https://discord.gg/Zxbndcm
    [opencollective-image]: https://opencollective.com/node-fetch/backers.svg
    [opencollective-url]: https://opencollective.com/node-fetch
    [whatwg-fetch]: https://fetch.spec.whatwg.org/	    [whatwg-fetch]: https://fetch.spec.whatwg.org/
    [response-init]: https://fetch.spec.whatwg.org/#responseinit	    [response-init]: https://fetch.spec.whatwg.org/#responseinit
    [node-readable]: https://nodejs.org/api/stream.html#stream_readable_streams	    [node-readable]: https://nodejs.org/api/stream.html#stream_readable_streams
 4  
.licenses/npm/semver.dep.yml
@@ -1,9 +1,9 @@
---	---
name: semver	name: semver
version: 7.3.2	version: 7.3.5
type: npm	type: npm
summary: The semantic version parser used by npm.	summary: The semantic version parser used by npm.
homepage: https://github.com/npm/node-semver#readme	homepage: 
license: isc	license: isc
licenses:	licenses:
- sources: LICENSE	- sources: LICENSE
 30  
.licenses/npm/tr46.dep.yml
@@ -0,0 +1,30 @@
---
name: tr46
version: 0.0.3
type: npm
summary: An implementation of the Unicode TR46 spec
homepage: https://github.com/Sebmaster/tr46.js#readme
license: mit
licenses:
- sources: Auto-generated MIT license text
  text: |
    MIT License
    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:
    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.
notices: []
 18  
...lugin-rest-endpoint-methods-4.1.2.dep.yml â†’ .licenses/npm/uuid.dep.yml
@@ -1,20 +1,20 @@
---	---
name: "@octokit/plugin-rest-endpoint-methods"	name: uuid
version: 4.1.2	version: 8.3.2
type: npm	type: npm
summary: Octokit plugin adding one method for all of api.github.com REST API endpoints	summary: RFC4122 (v1, v4, and v5) UUIDs
homepage: https://github.com/octokit/plugin-rest-endpoint-methods.js#readme	homepage: 
license: mit	license: mit
licenses:	licenses:
- sources: LICENSE	- sources: LICENSE.md
  text: |	  text: |
    MIT License Copyright (c) 2019 Octokit contributors	    The MIT License (MIT)
    Copyright (c) 2010-2020 Robert Kieffer and other contributors
    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:	    Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
    The above copyright notice and this permission notice (including the next paragraph) shall be included in all copies or substantial portions of the Software.	    The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.	    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
- sources: README.md	
  text: "[MIT](LICENSE)"	
notices: []	notices: []
 23  
.licenses/npm/webidl-conversions.dep.yml
@@ -0,0 +1,23 @@
---
name: webidl-conversions
version: 3.0.1
type: npm
summary: Implements the WebIDL algorithms for converting to and from JavaScript values
homepage: 
license: bsd-2-clause
licenses:
- sources: LICENSE.md
  text: |
    # The BSD 2-Clause License
    Copyright (c) 2014, Domenic Denicola
    All rights reserved.
    Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
    1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
notices: []
 17  
.licenses/npm/@octokit/rest.dep.yml â†’ .licenses/npm/whatwg-url.dep.yml
@@ -1,17 +1,16 @@
---	---
name: "@octokit/rest"	name: whatwg-url
version: 18.0.2	version: 5.0.0
type: npm	type: npm
summary: GitHub REST API client for Node.js	summary: An implementation of the WHATWG URL Standard's URL API and parsing machinery
homepage: https://github.com/octokit/rest.js#readme	homepage: 
license: mit	license: mit
licenses:	licenses:
- sources: LICENSE	- sources: LICENSE.txt
  text: |	  text: |
    The MIT License	    The MIT License (MIT)
    Copyright (c) 2012 Cloud9 IDE, Inc. (Mike de Boer)	    Copyright (c) 2015â€“2016 Sebastian Mayr
    Copyright (c) 2017-2018 Octokit contributors	
    Permission is hereby granted, free of charge, to any person obtaining a copy	    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal	    of this software and associated documentation files (the "Software"), to deal
@@ -30,6 +29,4 @@ licenses:
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,	    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN	    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.	    THE SOFTWARE.
- sources: README.md	
  text: "[MIT](LICENSE)"	
notices: []	notices: []
 26  
.licenses/npm/yallist.dep.yml
@@ -0,0 +1,26 @@
---
name: yallist
version: 4.0.0
type: npm
summary: Yet Another Linked List
homepage: 
license: isc
licenses:
- sources: LICENSE
  text: |
    The ISC License
    Copyright (c) Isaac Z. Schlueter and Contributors
    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted, provided that the above
    copyright notice and this permission notice appear in all copies.
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
    WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
    MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
    ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
    WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
    ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR
    IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
notices: []
 10  
CHANGELOG.md
@@ -1,5 +1,15 @@
# Changelog	# Changelog


# [7.0.0]

:warning: Breaking change :warning:

* Allow daysBeforeStale options to be float by @irega in https://github.com/actions/stale/pull/841
* Use cache in check-dist.yml by @jongwooo in https://github.com/actions/stale/pull/876
* fix print outputs step in existing workflows by @irega in https://github.com/actions/stale/pull/859
* Update issue and PR templates, add/delete workflow files by @IvanZosimov in https://github.com/actions/stale/pull/880
* Update how stale handles exempt items by @johnsudol in https://github.com/actions/stale/pull/874

# [6.0.1]	# [6.0.1]


Update @actions/core to v1.10.0 ([#839](https://github.com/actions/stale/pull/839))	Update @actions/core to v1.10.0 ([#839](https://github.com/actions/stale/pull/839))
 2  
CODEOWNERS
This CODEOWNERS file contains errors â€¦
@@ -1 +1 @@
* @actions/actions-runtime	* @actions/setup-actions-team
  8  
README.md
@@ -1494,17 +1494,17 @@ Required Permission: `pull-requests: write`
#### exempt-issue-labels	#### exempt-issue-labels
The label(s) that can exempt to automatically mark as stale the issues.  	Comma separated list of labels that can be assigned to issues to exclude them from being marked as stale
It can be a comma separated list of labels (e.g: `question,bug`).	(e.g: `question,bug`)
If unset (or an empty string), this option will not alter the stale workflow.	If unset (or an empty string), this option will not alter the stale workflow.
Default value: unset	Default value: unset
#### exempt-pr-labels	#### exempt-pr-labels
The label(s) that can exempt to automatically mark as stale the pull requests.  	Comma separated list of labels that can be assigned to pull requests to exclude them from being marked as stale
It can be a comma separated list of labels (e.g: `need-help,WIP`).	(e.g: `need-help,WIP`)
If unset (or an empty string), this option will not alter the stale workflow.	If unset (or an empty string), this option will not alter the stale workflow.
  38  
__tests__/main.spec.ts
@@ -1094,44 +1094,6 @@ test('exempt pr labels will not be marked stale', async () => {
  expect(processor.staleIssues).toHaveLength(2); // PR should get processed even though it has an exempt **issue** label	  expect(processor.staleIssues).toHaveLength(2); // PR should get processed even though it has an exempt **issue** label
});	});


test('exempt issue labels will not be marked stale and will remove the existing stale label', async () => {	
  expect.assertions(3);	
  const opts = {...DefaultProcessorOptions};	
  opts.exemptIssueLabels = 'Exempt';	
  const TestIssueList: Issue[] = [	
    generateIssue(	
      opts,	
      1,	
      'My first issue',	
      '2020-01-01T17:00:00Z',	
      '2020-01-01T17:00:00Z',	
      false,	
      ['Exempt', 'Stale']	
    )	
  ];	
  const processor = new IssuesProcessorMock(	
    opts,	
    async p => (p === 1 ? TestIssueList : []),	
    async () => [	
      {	
        user: {	
          login: 'notme',	
          type: 'User'	
        },	
        body: 'Body'	
      }	
    ], // return a fake comment to indicate there was an update	
    async () => new Date().toDateString()	
  );	

  // process our fake issue list	
  await processor.processIssues(1);	

  expect(processor.staleIssues.length).toStrictEqual(0);	
  expect(processor.closedIssues.length).toStrictEqual(0);	
  expect(processor.removedLabelIssues.length).toStrictEqual(1);	
});	

test('stale issues should not be closed if days is set to -1', async () => {	test('stale issues should not be closed if days is set to -1', async () => {
  const opts = {...DefaultProcessorOptions};	  const opts = {...DefaultProcessorOptions};
  opts.daysBeforeClose = -1;	  opts.daysBeforeClose = -1;
 2,607  
dist/index.js
@@ -523,20 +523,17 @@ class IssuesProcessor {
                }	                }
            }	            }
            if (issue.isStale) {	            if (issue.isStale) {
                issueLogger.info(`This $$type has a stale label`);	                issueLogger.info(`This $$type includes a stale label`);
            }	            }
            else {	            else {
                issueLogger.info(`This $$type hasn't a stale label`);	                issueLogger.info(`This $$type does not include a stale label`);
            }	            }
            const exemptLabels = words_to_list_1.wordsToList(issue.isPullRequest	            const exemptLabels = words_to_list_1.wordsToList(issue.isPullRequest
                ? this.options.exemptPrLabels	                ? this.options.exemptPrLabels
                : this.options.exemptIssueLabels);	                : this.options.exemptIssueLabels);
            if (exemptLabels.some((exemptLabel) => is_labeled_1.isLabeled(issue, exemptLabel))) {	            const hasExemptLabel = exemptLabels.some((exemptLabel) => is_labeled_1.isLabeled(issue, exemptLabel));
                if (issue.isStale) {	            if (hasExemptLabel) {
                    issueLogger.info(`An exempt label was added after the stale label.`);	                issueLogger.info(`Skipping this $$type because it contains an exempt label, see ${issueLogger.createOptionLink(issue.isPullRequest ? option_1.Option.ExemptPrLabels : option_1.Option.ExemptIssueLabels)} for more details`);
                    yield this._removeStaleLabel(issue, staleLabel);	
                }	
                issueLogger.info(`Skipping this $$type because it has an exempt label`);	
                IssuesProcessor._endIssueProcessing(issue);	                IssuesProcessor._endIssueProcessing(issue);
                return; // Don't process exempt issues	                return; // Don't process exempt issues
            }	            }
@@ -10621,1303 +10618,1303 @@ exports.parseURL = __nccwpck_require__(33).parseURL;
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {	/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {


"use strict";	"use strict";

const punycode = __nccwpck_require__(4213);	const punycode = __nccwpck_require__(4213);
const tr46 = __nccwpck_require__(2299);	const tr46 = __nccwpck_require__(2299);

const specialSchemes = {	const specialSchemes = {
  ftp: 21,	  ftp: 21,
  file: null,	  file: null,
  gopher: 70,	  gopher: 70,
  http: 80,	  http: 80,
  https: 443,	  https: 443,
  ws: 80,	  ws: 80,
  wss: 443	  wss: 443
};	};

const failure = Symbol("failure");	const failure = Symbol("failure");

function countSymbols(str) {	function countSymbols(str) {
  return punycode.ucs2.decode(str).length;	  return punycode.ucs2.decode(str).length;
}	}

function at(input, idx) {	function at(input, idx) {
  const c = input[idx];	  const c = input[idx];
  return isNaN(c) ? undefined : String.fromCodePoint(c);	  return isNaN(c) ? undefined : String.fromCodePoint(c);
}	}

function isASCIIDigit(c) {	function isASCIIDigit(c) {
  return c >= 0x30 && c <= 0x39;	  return c >= 0x30 && c <= 0x39;
}	}

function isASCIIAlpha(c) {	function isASCIIAlpha(c) {
  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);	  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);
}	}

function isASCIIAlphanumeric(c) {	function isASCIIAlphanumeric(c) {
  return isASCIIAlpha(c) || isASCIIDigit(c);	  return isASCIIAlpha(c) || isASCIIDigit(c);
}	}

function isASCIIHex(c) {	function isASCIIHex(c) {
  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);	  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);
}	}

function isSingleDot(buffer) {	function isSingleDot(buffer) {
  return buffer === "." || buffer.toLowerCase() === "%2e";	  return buffer === "." || buffer.toLowerCase() === "%2e";
}	}

function isDoubleDot(buffer) {	function isDoubleDot(buffer) {
  buffer = buffer.toLowerCase();	  buffer = buffer.toLowerCase();
  return buffer === ".." || buffer === "%2e." || buffer === ".%2e" || buffer === "%2e%2e";	  return buffer === ".." || buffer === "%2e." || buffer === ".%2e" || buffer === "%2e%2e";
}	}

function isWindowsDriveLetterCodePoints(cp1, cp2) {	function isWindowsDriveLetterCodePoints(cp1, cp2) {
  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);	  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);
}	}

function isWindowsDriveLetterString(string) {	function isWindowsDriveLetterString(string) {
  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === ":" || string[1] === "|");	  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === ":" || string[1] === "|");
}	}

function isNormalizedWindowsDriveLetterString(string) {	function isNormalizedWindowsDriveLetterString(string) {
  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === ":";	  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === ":";
}	}

function containsForbiddenHostCodePoint(string) {	function containsForbiddenHostCodePoint(string) {
  return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;	  return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
}	}

function containsForbiddenHostCodePointExcludingPercent(string) {	function containsForbiddenHostCodePointExcludingPercent(string) {
  return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;	  return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
}	}

function isSpecialScheme(scheme) {	function isSpecialScheme(scheme) {
  return specialSchemes[scheme] !== undefined;	  return specialSchemes[scheme] !== undefined;
}	}

function isSpecial(url) {	function isSpecial(url) {
  return isSpecialScheme(url.scheme);	  return isSpecialScheme(url.scheme);
}	}

function defaultPort(scheme) {	function defaultPort(scheme) {
  return specialSchemes[scheme];	  return specialSchemes[scheme];
}	}

function percentEncode(c) {	function percentEncode(c) {
  let hex = c.toString(16).toUpperCase();	  let hex = c.toString(16).toUpperCase();
  if (hex.length === 1) {	  if (hex.length === 1) {
    hex = "0" + hex;	    hex = "0" + hex;
  }	  }

  return "%" + hex;	  return "%" + hex;
}	}

function utf8PercentEncode(c) {	function utf8PercentEncode(c) {
  const buf = new Buffer(c);	  const buf = new Buffer(c);

  let str = "";	  let str = "";

  for (let i = 0; i < buf.length; ++i) {	  for (let i = 0; i < buf.length; ++i) {
    str += percentEncode(buf[i]);	    str += percentEncode(buf[i]);
  }	  }

  return str;	  return str;
}	}

function utf8PercentDecode(str) {	function utf8PercentDecode(str) {
  const input = new Buffer(str);	  const input = new Buffer(str);
  const output = [];	  const output = [];
  for (let i = 0; i < input.length; ++i) {	  for (let i = 0; i < input.length; ++i) {
    if (input[i] !== 37) {	    if (input[i] !== 37) {
      output.push(input[i]);	      output.push(input[i]);
    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {	    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {
      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));	      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));
      i += 2;	      i += 2;
    } else {	    } else {
      output.push(input[i]);	      output.push(input[i]);
    }	    }
  }	  }
  return new Buffer(output).toString();	  return new Buffer(output).toString();
}	}

function isC0ControlPercentEncode(c) {	function isC0ControlPercentEncode(c) {
  return c <= 0x1F || c > 0x7E;	  return c <= 0x1F || c > 0x7E;
}	}

const extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);	const extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);
function isPathPercentEncode(c) {	function isPathPercentEncode(c) {
  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);	  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);
}	}

const extraUserinfoPercentEncodeSet =	const extraUserinfoPercentEncodeSet =
  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);	  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);
function isUserinfoPercentEncode(c) {	function isUserinfoPercentEncode(c) {
  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);	  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);
}	}

function percentEncodeChar(c, encodeSetPredicate) {	function percentEncodeChar(c, encodeSetPredicate) {
  const cStr = String.fromCodePoint(c);	  const cStr = String.fromCodePoint(c);

  if (encodeSetPredicate(c)) {	  if (encodeSetPredicate(c)) {
    return utf8PercentEncode(cStr);	    return utf8PercentEncode(cStr);
  }	  }

  return cStr;	  return cStr;
}	}

function parseIPv4Number(input) {	function parseIPv4Number(input) {
  let R = 10;	  let R = 10;

  if (input.length >= 2 && input.charAt(0) === "0" && input.charAt(1).toLowerCase() === "x") {	  if (input.length >= 2 && input.charAt(0) === "0" && input.charAt(1).toLowerCase() === "x") {
    input = input.substring(2);	    input = input.substring(2);
    R = 16;	    R = 16;
  } else if (input.length >= 2 && input.charAt(0) === "0") {	  } else if (input.length >= 2 && input.charAt(0) === "0") {
    input = input.substring(1);	    input = input.substring(1);
    R = 8;	    R = 8;
  }	  }

  if (input === "") {	  if (input === "") {
    return 0;	    return 0;
  }	  }

  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);	  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);
  if (regex.test(input)) {	  if (regex.test(input)) {
    return failure;	    return failure;
  }	  }

  return parseInt(input, R);	  return parseInt(input, R);
}	}

function parseIPv4(input) {	function parseIPv4(input) {
  const parts = input.split(".");	  const parts = input.split(".");
  if (parts[parts.length - 1] === "") {	  if (parts[parts.length - 1] === "") {
    if (parts.length > 1) {	    if (parts.length > 1) {
      parts.pop();	      parts.pop();
    }	    }
  }	  }

  if (parts.length > 4) {	  if (parts.length > 4) {
    return input;	    return input;
  }	  }

  const numbers = [];	  const numbers = [];
  for (const part of parts) {	  for (const part of parts) {
    if (part === "") {	    if (part === "") {
      return input;	      return input;
    }	    }
    const n = parseIPv4Number(part);	    const n = parseIPv4Number(part);
    if (n === failure) {	    if (n === failure) {
      return input;	      return input;
    }	    }

    numbers.push(n);	    numbers.push(n);
  }	  }

  for (let i = 0; i < numbers.length - 1; ++i) {	  for (let i = 0; i < numbers.length - 1; ++i) {
    if (numbers[i] > 255) {	    if (numbers[i] > 255) {
      return failure;	      return failure;
    }	    }
  }	  }
  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {	  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {
    return failure;	    return failure;
  }	  }

  let ipv4 = numbers.pop();	  let ipv4 = numbers.pop();
  let counter = 0;	  let counter = 0;

  for (const n of numbers) {	  for (const n of numbers) {
    ipv4 += n * Math.pow(256, 3 - counter);	    ipv4 += n * Math.pow(256, 3 - counter);
    ++counter;	    ++counter;
  }	  }

  return ipv4;	  return ipv4;
}	}

function serializeIPv4(address) {	function serializeIPv4(address) {
  let output = "";	  let output = "";
  let n = address;	  let n = address;

  for (let i = 1; i <= 4; ++i) {	  for (let i = 1; i <= 4; ++i) {
    output = String(n % 256) + output;	    output = String(n % 256) + output;
    if (i !== 4) {	    if (i !== 4) {
      output = "." + output;	      output = "." + output;
    }	    }
    n = Math.floor(n / 256);	    n = Math.floor(n / 256);
  }	  }

  return output;	  return output;
}	}

function parseIPv6(input) {	function parseIPv6(input) {
  const address = [0, 0, 0, 0, 0, 0, 0, 0];	  const address = [0, 0, 0, 0, 0, 0, 0, 0];
  let pieceIndex = 0;	  let pieceIndex = 0;
  let compress = null;	  let compress = null;
  let pointer = 0;	  let pointer = 0;

  input = punycode.ucs2.decode(input);	  input = punycode.ucs2.decode(input);

  if (input[pointer] === 58) {	  if (input[pointer] === 58) {
    if (input[pointer + 1] !== 58) {	    if (input[pointer + 1] !== 58) {
      return failure;	      return failure;
    }	    }

    pointer += 2;	    pointer += 2;
    ++pieceIndex;	    ++pieceIndex;
    compress = pieceIndex;	    compress = pieceIndex;
  }	  }

  while (pointer < input.length) {	  while (pointer < input.length) {
    if (pieceIndex === 8) {	    if (pieceIndex === 8) {
      return failure;	      return failure;
    }	    }

    if (input[pointer] === 58) {	    if (input[pointer] === 58) {
      if (compress !== null) {	      if (compress !== null) {
        return failure;	        return failure;
      }	      }
      ++pointer;	      ++pointer;
      ++pieceIndex;	      ++pieceIndex;
      compress = pieceIndex;	      compress = pieceIndex;
      continue;	      continue;
    }	    }

    let value = 0;	    let value = 0;
    let length = 0;	    let length = 0;

    while (length < 4 && isASCIIHex(input[pointer])) {	    while (length < 4 && isASCIIHex(input[pointer])) {
      value = value * 0x10 + parseInt(at(input, pointer), 16);	      value = value * 0x10 + parseInt(at(input, pointer), 16);
      ++pointer;	      ++pointer;
      ++length;	      ++length;
    }	    }

    if (input[pointer] === 46) {	    if (input[pointer] === 46) {
      if (length === 0) {	      if (length === 0) {
        return failure;	        return failure;
      }	      }

      pointer -= length;	      pointer -= length;

      if (pieceIndex > 6) {	      if (pieceIndex > 6) {
        return failure;	        return failure;
      }	      }

      let numbersSeen = 0;	      let numbersSeen = 0;

      while (input[pointer] !== undefined) {	      while (input[pointer] !== undefined) {
        let ipv4Piece = null;	        let ipv4Piece = null;

        if (numbersSeen > 0) {	        if (numbersSeen > 0) {
          if (input[pointer] === 46 && numbersSeen < 4) {	          if (input[pointer] === 46 && numbersSeen < 4) {
            ++pointer;	            ++pointer;
          } else {	          } else {
            return failure;	            return failure;
          }	          }
        }	        }

        if (!isASCIIDigit(input[pointer])) {	        if (!isASCIIDigit(input[pointer])) {
          return failure;	          return failure;
        }	        }

        while (isASCIIDigit(input[pointer])) {	        while (isASCIIDigit(input[pointer])) {
          const number = parseInt(at(input, pointer));	          const number = parseInt(at(input, pointer));
          if (ipv4Piece === null) {	          if (ipv4Piece === null) {
            ipv4Piece = number;	            ipv4Piece = number;
          } else if (ipv4Piece === 0) {	          } else if (ipv4Piece === 0) {
            return failure;	            return failure;
          } else {	          } else {
            ipv4Piece = ipv4Piece * 10 + number;	            ipv4Piece = ipv4Piece * 10 + number;
          }	          }
          if (ipv4Piece > 255) {	          if (ipv4Piece > 255) {
            return failure;	            return failure;
          }	          }
          ++pointer;	          ++pointer;
        }	        }

        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;	        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;

        ++numbersSeen;	        ++numbersSeen;

        if (numbersSeen === 2 || numbersSeen === 4) {	        if (numbersSeen === 2 || numbersSeen === 4) {
          ++pieceIndex;	          ++pieceIndex;
        }	        }
      }	      }

      if (numbersSeen !== 4) {	      if (numbersSeen !== 4) {
        return failure;	        return failure;
      }	      }

      break;	      break;
    } else if (input[pointer] === 58) {	    } else if (input[pointer] === 58) {
      ++pointer;	      ++pointer;
      if (input[pointer] === undefined) {	      if (input[pointer] === undefined) {
        return failure;	        return failure;
      }	      }
    } else if (input[pointer] !== undefined) {	    } else if (input[pointer] !== undefined) {
      return failure;	      return failure;
    }	    }

    address[pieceIndex] = value;	    address[pieceIndex] = value;
    ++pieceIndex;	    ++pieceIndex;
  }	  }

  if (compress !== null) {	  if (compress !== null) {
    let swaps = pieceIndex - compress;	    let swaps = pieceIndex - compress;
    pieceIndex = 7;	    pieceIndex = 7;
    while (pieceIndex !== 0 && swaps > 0) {	    while (pieceIndex !== 0 && swaps > 0) {
      const temp = address[compress + swaps - 1];	      const temp = address[compress + swaps - 1];
      address[compress + swaps - 1] = address[pieceIndex];	      address[compress + swaps - 1] = address[pieceIndex];
      address[pieceIndex] = temp;	      address[pieceIndex] = temp;
      --pieceIndex;	      --pieceIndex;
      --swaps;	      --swaps;
    }	    }
  } else if (compress === null && pieceIndex !== 8) {	  } else if (compress === null && pieceIndex !== 8) {
    return failure;	    return failure;
  }	  }

  return address;	  return address;
}	}

function serializeIPv6(address) {	function serializeIPv6(address) {
  let output = "";	  let output = "";
  const seqResult = findLongestZeroSequence(address);	  const seqResult = findLongestZeroSequence(address);
  const compress = seqResult.idx;	  const compress = seqResult.idx;
  let ignore0 = false;	  let ignore0 = false;

  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {	  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {
    if (ignore0 && address[pieceIndex] === 0) {	    if (ignore0 && address[pieceIndex] === 0) {
      continue;	      continue;
    } else if (ignore0) {	    } else if (ignore0) {
      ignore0 = false;	      ignore0 = false;
    }	    }

    if (compress === pieceIndex) {	    if (compress === pieceIndex) {
      const separator = pieceIndex === 0 ? "::" : ":";	      const separator = pieceIndex === 0 ? "::" : ":";
      output += separator;	      output += separator;
      ignore0 = true;	      ignore0 = true;
      continue;	      continue;
    }	    }

    output += address[pieceIndex].toString(16);	    output += address[pieceIndex].toString(16);

    if (pieceIndex !== 7) {	    if (pieceIndex !== 7) {
      output += ":";	      output += ":";
    }	    }
  }	  }

  return output;	  return output;
}	}

function parseHost(input, isSpecialArg) {	function parseHost(input, isSpecialArg) {
  if (input[0] === "[") {	  if (input[0] === "[") {
    if (input[input.length - 1] !== "]") {	    if (input[input.length - 1] !== "]") {
      return failure;	      return failure;
    }	    }

    return parseIPv6(input.substring(1, input.length - 1));	    return parseIPv6(input.substring(1, input.length - 1));
  }	  }

  if (!isSpecialArg) {	  if (!isSpecialArg) {
    return parseOpaqueHost(input);	    return parseOpaqueHost(input);
  }	  }

  const domain = utf8PercentDecode(input);	  const domain = utf8PercentDecode(input);
  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);	  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);
  if (asciiDomain === null) {	  if (asciiDomain === null) {
    return failure;	    return failure;
  }	  }

  if (containsForbiddenHostCodePoint(asciiDomain)) {	  if (containsForbiddenHostCodePoint(asciiDomain)) {
    return failure;	    return failure;
  }	  }

  const ipv4Host = parseIPv4(asciiDomain);	  const ipv4Host = parseIPv4(asciiDomain);
  if (typeof ipv4Host === "number" || ipv4Host === failure) {	  if (typeof ipv4Host === "number" || ipv4Host === failure) {
    return ipv4Host;	    return ipv4Host;
  }	  }

  return asciiDomain;	  return asciiDomain;
}	}

function parseOpaqueHost(input) {	function parseOpaqueHost(input) {
  if (containsForbiddenHostCodePointExcludingPercent(input)) {	  if (containsForbiddenHostCodePointExcludingPercent(input)) {
    return failure;	    return failure;
  }	  }

  let output = "";	  let output = "";
  const decoded = punycode.ucs2.decode(input);	  const decoded = punycode.ucs2.decode(input);
  for (let i = 0; i < decoded.length; ++i) {	  for (let i = 0; i < decoded.length; ++i) {
    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);	    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);
  }	  }
  return output;	  return output;
}	}

function findLongestZeroSequence(arr) {	function findLongestZeroSequence(arr) {
  let maxIdx = null;	  let maxIdx = null;
  let maxLen = 1; // only find elements > 1	  let maxLen = 1; // only find elements > 1
  let currStart = null;	  let currStart = null;
  let currLen = 0;	  let currLen = 0;

  for (let i = 0; i < arr.length; ++i) {	  for (let i = 0; i < arr.length; ++i) {
    if (arr[i] !== 0) {	    if (arr[i] !== 0) {
      if (currLen > maxLen) {	      if (currLen > maxLen) {
        maxIdx = currStart;	        maxIdx = currStart;
        maxLen = currLen;	        maxLen = currLen;
      }	      }

      currStart = null;	      currStart = null;
      currLen = 0;	      currLen = 0;
    } else {	    } else {
      if (currStart === null) {	      if (currStart === null) {
        currStart = i;	        currStart = i;
      }	      }
      ++currLen;	      ++currLen;
    }	    }
  }	  }

  // if trailing zeros	  // if trailing zeros
  if (currLen > maxLen) {	  if (currLen > maxLen) {
    maxIdx = currStart;	    maxIdx = currStart;
    maxLen = currLen;	    maxLen = currLen;
  }	  }

  return {	  return {
    idx: maxIdx,	    idx: maxIdx,
    len: maxLen	    len: maxLen
  };	  };
}	}

function serializeHost(host) {	function serializeHost(host) {
  if (typeof host === "number") {	  if (typeof host === "number") {
    return serializeIPv4(host);	    return serializeIPv4(host);
  }	  }

  // IPv6 serializer	  // IPv6 serializer
  if (host instanceof Array) {	  if (host instanceof Array) {
    return "[" + serializeIPv6(host) + "]";	    return "[" + serializeIPv6(host) + "]";
  }	  }

  return host;	  return host;
}	}

function trimControlChars(url) {	function trimControlChars(url) {
  return url.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");	  return url.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
}	}

function trimTabAndNewline(url) {	function trimTabAndNewline(url) {
  return url.replace(/\u0009|\u000A|\u000D/g, "");	  return url.replace(/\u0009|\u000A|\u000D/g, "");
}	}

function shortenPath(url) {	function shortenPath(url) {
  const path = url.path;	  const path = url.path;
  if (path.length === 0) {	  if (path.length === 0) {
    return;	    return;
  }	  }
  if (url.scheme === "file" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {	  if (url.scheme === "file" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {
    return;	    return;
  }	  }

  path.pop();	  path.pop();
}	}

function includesCredentials(url) {	function includesCredentials(url) {
  return url.username !== "" || url.password !== "";	  return url.username !== "" || url.password !== "";
}	}

function cannotHaveAUsernamePasswordPort(url) {	function cannotHaveAUsernamePasswordPort(url) {
  return url.host === null || url.host === "" || url.cannotBeABaseURL || url.scheme === "file";	  return url.host === null || url.host === "" || url.cannotBeABaseURL || url.scheme === "file";
}	}

function isNormalizedWindowsDriveLetter(string) {	function isNormalizedWindowsDriveLetter(string) {
  return /^[A-Za-z]:$/.test(string);	  return /^[A-Za-z]:$/.test(string);
}	}

function URLStateMachine(input, base, encodingOverride, url, stateOverride) {	function URLStateMachine(input, base, encodingOverride, url, stateOverride) {
  this.pointer = 0;	  this.pointer = 0;
  this.input = input;	  this.input = input;
  this.base = base || null;	  this.base = base || null;
  this.encodingOverride = encodingOverride || "utf-8";	  this.encodingOverride = encodingOverride || "utf-8";
  this.stateOverride = stateOverride;	  this.stateOverride = stateOverride;
  this.url = url;	  this.url = url;
  this.failure = false;	  this.failure = false;
  this.parseError = false;	  this.parseError = false;

  if (!this.url) {	  if (!this.url) {
    this.url = {	    this.url = {
      scheme: "",	      scheme: "",
      username: "",	      username: "",
      password: "",	      password: "",
      host: null,	      host: null,
      port: null,	      port: null,
      path: [],	      path: [],
      query: null,	      query: null,
      fragment: null,	      fragment: null,

      cannotBeABaseURL: false	      cannotBeABaseURL: false
    };	    };

    const res = trimControlChars(this.input);	    const res = trimControlChars(this.input);
    if (res !== this.input) {	    if (res !== this.input) {
      this.parseError = true;	      this.parseError = true;
    }	    }
    this.input = res;	    this.input = res;
  }	  }

  const res = trimTabAndNewline(this.input);	  const res = trimTabAndNewline(this.input);
  if (res !== this.input) {	  if (res !== this.input) {
    this.parseError = true;	    this.parseError = true;
  }	  }
  this.input = res;	  this.input = res;

  this.state = stateOverride || "scheme start";	  this.state = stateOverride || "scheme start";

  this.buffer = "";	  this.buffer = "";
  this.atFlag = false;	  this.atFlag = false;
  this.arrFlag = false;	  this.arrFlag = false;
  this.passwordTokenSeenFlag = false;	  this.passwordTokenSeenFlag = false;

  this.input = punycode.ucs2.decode(this.input);	  this.input = punycode.ucs2.decode(this.input);

  for (; this.pointer <= this.input.length; ++this.pointer) {	  for (; this.pointer <= this.input.length; ++this.pointer) {
    const c = this.input[this.pointer];	    const c = this.input[this.pointer];
    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);	    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);

    // exec state machine	    // exec state machine
    const ret = this["parse " + this.state](c, cStr);	    const ret = this["parse " + this.state](c, cStr);
    if (!ret) {	    if (!ret) {
      break; // terminate algorithm	      break; // terminate algorithm
    } else if (ret === failure) {	    } else if (ret === failure) {
      this.failure = true;	      this.failure = true;
      break;	      break;
    }	    }
  }	  }
}	}

URLStateMachine.prototype["parse scheme start"] = function parseSchemeStart(c, cStr) {	URLStateMachine.prototype["parse scheme start"] = function parseSchemeStart(c, cStr) {
  if (isASCIIAlpha(c)) {	  if (isASCIIAlpha(c)) {
    this.buffer += cStr.toLowerCase();	    this.buffer += cStr.toLowerCase();
    this.state = "scheme";	    this.state = "scheme";
  } else if (!this.stateOverride) {	  } else if (!this.stateOverride) {
    this.state = "no scheme";	    this.state = "no scheme";
    --this.pointer;	    --this.pointer;
  } else {	  } else {
    this.parseError = true;	    this.parseError = true;
    return failure;	    return failure;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse scheme"] = function parseScheme(c, cStr) {	URLStateMachine.prototype["parse scheme"] = function parseScheme(c, cStr) {
  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {	  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {
    this.buffer += cStr.toLowerCase();	    this.buffer += cStr.toLowerCase();
  } else if (c === 58) {	  } else if (c === 58) {
    if (this.stateOverride) {	    if (this.stateOverride) {
      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {	      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {
        return false;	        return false;
      }	      }

      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {	      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {
        return false;	        return false;
      }	      }

      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file") {	      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file") {
        return false;	        return false;
      }	      }

      if (this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) {	      if (this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) {
        return false;	        return false;
      }	      }
    }	    }
    this.url.scheme = this.buffer;	    this.url.scheme = this.buffer;
    this.buffer = "";	    this.buffer = "";
    if (this.stateOverride) {	    if (this.stateOverride) {
      return false;	      return false;
    }	    }
    if (this.url.scheme === "file") {	    if (this.url.scheme === "file") {
      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {	      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {
        this.parseError = true;	        this.parseError = true;
      }	      }
      this.state = "file";	      this.state = "file";
    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {	    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {
      this.state = "special relative or authority";	      this.state = "special relative or authority";
    } else if (isSpecial(this.url)) {	    } else if (isSpecial(this.url)) {
      this.state = "special authority slashes";	      this.state = "special authority slashes";
    } else if (this.input[this.pointer + 1] === 47) {	    } else if (this.input[this.pointer + 1] === 47) {
      this.state = "path or authority";	      this.state = "path or authority";
      ++this.pointer;	      ++this.pointer;
    } else {	    } else {
      this.url.cannotBeABaseURL = true;	      this.url.cannotBeABaseURL = true;
      this.url.path.push("");	      this.url.path.push("");
      this.state = "cannot-be-a-base-URL path";	      this.state = "cannot-be-a-base-URL path";
    }	    }
  } else if (!this.stateOverride) {	  } else if (!this.stateOverride) {
    this.buffer = "";	    this.buffer = "";
    this.state = "no scheme";	    this.state = "no scheme";
    this.pointer = -1;	    this.pointer = -1;
  } else {	  } else {
    this.parseError = true;	    this.parseError = true;
    return failure;	    return failure;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse no scheme"] = function parseNoScheme(c) {	URLStateMachine.prototype["parse no scheme"] = function parseNoScheme(c) {
  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {	  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {
    return failure;	    return failure;
  } else if (this.base.cannotBeABaseURL && c === 35) {	  } else if (this.base.cannotBeABaseURL && c === 35) {
    this.url.scheme = this.base.scheme;	    this.url.scheme = this.base.scheme;
    this.url.path = this.base.path.slice();	    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;	    this.url.query = this.base.query;
    this.url.fragment = "";	    this.url.fragment = "";
    this.url.cannotBeABaseURL = true;	    this.url.cannotBeABaseURL = true;
    this.state = "fragment";	    this.state = "fragment";
  } else if (this.base.scheme === "file") {	  } else if (this.base.scheme === "file") {
    this.state = "file";	    this.state = "file";
    --this.pointer;	    --this.pointer;
  } else {	  } else {
    this.state = "relative";	    this.state = "relative";
    --this.pointer;	    --this.pointer;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse special relative or authority"] = function parseSpecialRelativeOrAuthority(c) {	URLStateMachine.prototype["parse special relative or authority"] = function parseSpecialRelativeOrAuthority(c) {
  if (c === 47 && this.input[this.pointer + 1] === 47) {	  if (c === 47 && this.input[this.pointer + 1] === 47) {
    this.state = "special authority ignore slashes";	    this.state = "special authority ignore slashes";
    ++this.pointer;	    ++this.pointer;
  } else {	  } else {
    this.parseError = true;	    this.parseError = true;
    this.state = "relative";	    this.state = "relative";
    --this.pointer;	    --this.pointer;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse path or authority"] = function parsePathOrAuthority(c) {	URLStateMachine.prototype["parse path or authority"] = function parsePathOrAuthority(c) {
  if (c === 47) {	  if (c === 47) {
    this.state = "authority";	    this.state = "authority";
  } else {	  } else {
    this.state = "path";	    this.state = "path";
    --this.pointer;	    --this.pointer;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse relative"] = function parseRelative(c) {	URLStateMachine.prototype["parse relative"] = function parseRelative(c) {
  this.url.scheme = this.base.scheme;	  this.url.scheme = this.base.scheme;
  if (isNaN(c)) {	  if (isNaN(c)) {
    this.url.username = this.base.username;	    this.url.username = this.base.username;
    this.url.password = this.base.password;	    this.url.password = this.base.password;
    this.url.host = this.base.host;	    this.url.host = this.base.host;
    this.url.port = this.base.port;	    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();	    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;	    this.url.query = this.base.query;
  } else if (c === 47) {	  } else if (c === 47) {
    this.state = "relative slash";	    this.state = "relative slash";
  } else if (c === 63) {	  } else if (c === 63) {
    this.url.username = this.base.username;	    this.url.username = this.base.username;
    this.url.password = this.base.password;	    this.url.password = this.base.password;
    this.url.host = this.base.host;	    this.url.host = this.base.host;
    this.url.port = this.base.port;	    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();	    this.url.path = this.base.path.slice();
    this.url.query = "";	    this.url.query = "";
    this.state = "query";	    this.state = "query";
  } else if (c === 35) {	  } else if (c === 35) {
    this.url.username = this.base.username;	    this.url.username = this.base.username;
    this.url.password = this.base.password;	    this.url.password = this.base.password;
    this.url.host = this.base.host;	    this.url.host = this.base.host;
    this.url.port = this.base.port;	    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();	    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;	    this.url.query = this.base.query;
    this.url.fragment = "";	    this.url.fragment = "";
    this.state = "fragment";	    this.state = "fragment";
  } else if (isSpecial(this.url) && c === 92) {	  } else if (isSpecial(this.url) && c === 92) {
    this.parseError = true;	    this.parseError = true;
    this.state = "relative slash";	    this.state = "relative slash";
  } else {	  } else {
    this.url.username = this.base.username;	    this.url.username = this.base.username;
    this.url.password = this.base.password;	    this.url.password = this.base.password;
    this.url.host = this.base.host;	    this.url.host = this.base.host;
    this.url.port = this.base.port;	    this.url.port = this.base.port;
    this.url.path = this.base.path.slice(0, this.base.path.length - 1);	    this.url.path = this.base.path.slice(0, this.base.path.length - 1);

    this.state = "path";	    this.state = "path";
    --this.pointer;	    --this.pointer;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse relative slash"] = function parseRelativeSlash(c) {	URLStateMachine.prototype["parse relative slash"] = function parseRelativeSlash(c) {
  if (isSpecial(this.url) && (c === 47 || c === 92)) {	  if (isSpecial(this.url) && (c === 47 || c === 92)) {
    if (c === 92) {	    if (c === 92) {
      this.parseError = true;	      this.parseError = true;
    }	    }
    this.state = "special authority ignore slashes";	    this.state = "special authority ignore slashes";
  } else if (c === 47) {	  } else if (c === 47) {
    this.state = "authority";	    this.state = "authority";
  } else {	  } else {
    this.url.username = this.base.username;	    this.url.username = this.base.username;
    this.url.password = this.base.password;	    this.url.password = this.base.password;
    this.url.host = this.base.host;	    this.url.host = this.base.host;
    this.url.port = this.base.port;	    this.url.port = this.base.port;
    this.state = "path";	    this.state = "path";
    --this.pointer;	    --this.pointer;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse special authority slashes"] = function parseSpecialAuthoritySlashes(c) {	URLStateMachine.prototype["parse special authority slashes"] = function parseSpecialAuthoritySlashes(c) {
  if (c === 47 && this.input[this.pointer + 1] === 47) {	  if (c === 47 && this.input[this.pointer + 1] === 47) {
    this.state = "special authority ignore slashes";	    this.state = "special authority ignore slashes";
    ++this.pointer;	    ++this.pointer;
  } else {	  } else {
    this.parseError = true;	    this.parseError = true;
    this.state = "special authority ignore slashes";	    this.state = "special authority ignore slashes";
    --this.pointer;	    --this.pointer;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse special authority ignore slashes"] = function parseSpecialAuthorityIgnoreSlashes(c) {	URLStateMachine.prototype["parse special authority ignore slashes"] = function parseSpecialAuthorityIgnoreSlashes(c) {
  if (c !== 47 && c !== 92) {	  if (c !== 47 && c !== 92) {
    this.state = "authority";	    this.state = "authority";
    --this.pointer;	    --this.pointer;
  } else {	  } else {
    this.parseError = true;	    this.parseError = true;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse authority"] = function parseAuthority(c, cStr) {	URLStateMachine.prototype["parse authority"] = function parseAuthority(c, cStr) {
  if (c === 64) {	  if (c === 64) {
    this.parseError = true;	    this.parseError = true;
    if (this.atFlag) {	    if (this.atFlag) {
      this.buffer = "%40" + this.buffer;	      this.buffer = "%40" + this.buffer;
    }	    }
    this.atFlag = true;	    this.atFlag = true;

    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars	    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars
    const len = countSymbols(this.buffer);	    const len = countSymbols(this.buffer);
    for (let pointer = 0; pointer < len; ++pointer) {	    for (let pointer = 0; pointer < len; ++pointer) {
      const codePoint = this.buffer.codePointAt(pointer);	      const codePoint = this.buffer.codePointAt(pointer);

      if (codePoint === 58 && !this.passwordTokenSeenFlag) {	      if (codePoint === 58 && !this.passwordTokenSeenFlag) {
        this.passwordTokenSeenFlag = true;	        this.passwordTokenSeenFlag = true;
        continue;	        continue;
      }	      }
      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);	      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);
      if (this.passwordTokenSeenFlag) {	      if (this.passwordTokenSeenFlag) {
        this.url.password += encodedCodePoints;	        this.url.password += encodedCodePoints;
      } else {	      } else {
        this.url.username += encodedCodePoints;	        this.url.username += encodedCodePoints;
      }	      }
    }	    }
    this.buffer = "";	    this.buffer = "";
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||	  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||
             (isSpecial(this.url) && c === 92)) {	             (isSpecial(this.url) && c === 92)) {
    if (this.atFlag && this.buffer === "") {	    if (this.atFlag && this.buffer === "") {
      this.parseError = true;	      this.parseError = true;
      return failure;	      return failure;
    }	    }
    this.pointer -= countSymbols(this.buffer) + 1;	    this.pointer -= countSymbols(this.buffer) + 1;
    this.buffer = "";	    this.buffer = "";
    this.state = "host";	    this.state = "host";
  } else {	  } else {
    this.buffer += cStr;	    this.buffer += cStr;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse hostname"] =	URLStateMachine.prototype["parse hostname"] =
URLStateMachine.prototype["parse host"] = function parseHostName(c, cStr) {	URLStateMachine.prototype["parse host"] = function parseHostName(c, cStr) {
  if (this.stateOverride && this.url.scheme === "file") {	  if (this.stateOverride && this.url.scheme === "file") {
    --this.pointer;	    --this.pointer;
    this.state = "file host";	    this.state = "file host";
  } else if (c === 58 && !this.arrFlag) {	  } else if (c === 58 && !this.arrFlag) {
    if (this.buffer === "") {	    if (this.buffer === "") {
      this.parseError = true;	      this.parseError = true;
      return failure;	      return failure;
    }	    }

    const host = parseHost(this.buffer, isSpecial(this.url));	    const host = parseHost(this.buffer, isSpecial(this.url));
    if (host === failure) {	    if (host === failure) {
      return failure;	      return failure;
    }	    }

    this.url.host = host;	    this.url.host = host;
    this.buffer = "";	    this.buffer = "";
    this.state = "port";	    this.state = "port";
    if (this.stateOverride === "hostname") {	    if (this.stateOverride === "hostname") {
      return false;	      return false;
    }	    }
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||	  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||
             (isSpecial(this.url) && c === 92)) {	             (isSpecial(this.url) && c === 92)) {
    --this.pointer;	    --this.pointer;
    if (isSpecial(this.url) && this.buffer === "") {	    if (isSpecial(this.url) && this.buffer === "") {
      this.parseError = true;	      this.parseError = true;
      return failure;	      return failure;
    } else if (this.stateOverride && this.buffer === "" &&	    } else if (this.stateOverride && this.buffer === "" &&
               (includesCredentials(this.url) || this.url.port !== null)) {	               (includesCredentials(this.url) || this.url.port !== null)) {
      this.parseError = true;	      this.parseError = true;
      return false;	      return false;
    }	    }

    const host = parseHost(this.buffer, isSpecial(this.url));	    const host = parseHost(this.buffer, isSpecial(this.url));
    if (host === failure) {	    if (host === failure) {
      return failure;	      return failure;
    }	    }

    this.url.host = host;	    this.url.host = host;
    this.buffer = "";	    this.buffer = "";
    this.state = "path start";	    this.state = "path start";
    if (this.stateOverride) {	    if (this.stateOverride) {
      return false;	      return false;
    }	    }
  } else {	  } else {
    if (c === 91) {	    if (c === 91) {
      this.arrFlag = true;	      this.arrFlag = true;
    } else if (c === 93) {	    } else if (c === 93) {
      this.arrFlag = false;	      this.arrFlag = false;
    }	    }
    this.buffer += cStr;	    this.buffer += cStr;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse port"] = function parsePort(c, cStr) {	URLStateMachine.prototype["parse port"] = function parsePort(c, cStr) {
  if (isASCIIDigit(c)) {	  if (isASCIIDigit(c)) {
    this.buffer += cStr;	    this.buffer += cStr;
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||	  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||
             (isSpecial(this.url) && c === 92) ||	             (isSpecial(this.url) && c === 92) ||
             this.stateOverride) {	             this.stateOverride) {
    if (this.buffer !== "") {	    if (this.buffer !== "") {
      const port = parseInt(this.buffer);	      const port = parseInt(this.buffer);
      if (port > Math.pow(2, 16) - 1) {	      if (port > Math.pow(2, 16) - 1) {
        this.parseError = true;	        this.parseError = true;
        return failure;	        return failure;
      }	      }
      this.url.port = port === defaultPort(this.url.scheme) ? null : port;	      this.url.port = port === defaultPort(this.url.scheme) ? null : port;
      this.buffer = "";	      this.buffer = "";
    }	    }
    if (this.stateOverride) {	    if (this.stateOverride) {
      return false;	      return false;
    }	    }
    this.state = "path start";	    this.state = "path start";
    --this.pointer;	    --this.pointer;
  } else {	  } else {
    this.parseError = true;	    this.parseError = true;
    return failure;	    return failure;
  }	  }

  return true;	  return true;
};	};

const fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);	const fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);

URLStateMachine.prototype["parse file"] = function parseFile(c) {	URLStateMachine.prototype["parse file"] = function parseFile(c) {
  this.url.scheme = "file";	  this.url.scheme = "file";

  if (c === 47 || c === 92) {	  if (c === 47 || c === 92) {
    if (c === 92) {	    if (c === 92) {
      this.parseError = true;	      this.parseError = true;
    }	    }
    this.state = "file slash";	    this.state = "file slash";
  } else if (this.base !== null && this.base.scheme === "file") {	  } else if (this.base !== null && this.base.scheme === "file") {
    if (isNaN(c)) {	    if (isNaN(c)) {
      this.url.host = this.base.host;	      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();	      this.url.path = this.base.path.slice();
      this.url.query = this.base.query;	      this.url.query = this.base.query;
    } else if (c === 63) {	    } else if (c === 63) {
      this.url.host = this.base.host;	      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();	      this.url.path = this.base.path.slice();
      this.url.query = "";	      this.url.query = "";
      this.state = "query";	      this.state = "query";
    } else if (c === 35) {	    } else if (c === 35) {
      this.url.host = this.base.host;	      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();	      this.url.path = this.base.path.slice();
      this.url.query = this.base.query;	      this.url.query = this.base.query;
      this.url.fragment = "";	      this.url.fragment = "";
      this.state = "fragment";	      this.state = "fragment";
    } else {	    } else {
      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points	      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points
          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||	          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||
          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points	          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points
           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {	           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {
        this.url.host = this.base.host;	        this.url.host = this.base.host;
        this.url.path = this.base.path.slice();	        this.url.path = this.base.path.slice();
        shortenPath(this.url);	        shortenPath(this.url);
      } else {	      } else {
        this.parseError = true;	        this.parseError = true;
      }	      }

      this.state = "path";	      this.state = "path";
      --this.pointer;	      --this.pointer;
    }	    }
  } else {	  } else {
    this.state = "path";	    this.state = "path";
    --this.pointer;	    --this.pointer;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse file slash"] = function parseFileSlash(c) {	URLStateMachine.prototype["parse file slash"] = function parseFileSlash(c) {
  if (c === 47 || c === 92) {	  if (c === 47 || c === 92) {
    if (c === 92) {	    if (c === 92) {
      this.parseError = true;	      this.parseError = true;
    }	    }
    this.state = "file host";	    this.state = "file host";
  } else {	  } else {
    if (this.base !== null && this.base.scheme === "file") {	    if (this.base !== null && this.base.scheme === "file") {
      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {	      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {
        this.url.path.push(this.base.path[0]);	        this.url.path.push(this.base.path[0]);
      } else {	      } else {
        this.url.host = this.base.host;	        this.url.host = this.base.host;
      }	      }
    }	    }
    this.state = "path";	    this.state = "path";
    --this.pointer;	    --this.pointer;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse file host"] = function parseFileHost(c, cStr) {	URLStateMachine.prototype["parse file host"] = function parseFileHost(c, cStr) {
  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {	  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {
    --this.pointer;	    --this.pointer;
    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {	    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {
      this.parseError = true;	      this.parseError = true;
      this.state = "path";	      this.state = "path";
    } else if (this.buffer === "") {	    } else if (this.buffer === "") {
      this.url.host = "";	      this.url.host = "";
      if (this.stateOverride) {	      if (this.stateOverride) {
        return false;	        return false;
      }	      }
      this.state = "path start";	      this.state = "path start";
    } else {	    } else {
      let host = parseHost(this.buffer, isSpecial(this.url));	      let host = parseHost(this.buffer, isSpecial(this.url));
      if (host === failure) {	      if (host === failure) {
        return failure;	        return failure;
      }	      }
      if (host === "localhost") {	      if (host === "localhost") {
        host = "";	        host = "";
      }	      }
      this.url.host = host;	      this.url.host = host;

      if (this.stateOverride) {	      if (this.stateOverride) {
        return false;	        return false;
      }	      }

      this.buffer = "";	      this.buffer = "";
      this.state = "path start";	      this.state = "path start";
    }	    }
  } else {	  } else {
    this.buffer += cStr;	    this.buffer += cStr;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse path start"] = function parsePathStart(c) {	URLStateMachine.prototype["parse path start"] = function parsePathStart(c) {
  if (isSpecial(this.url)) {	  if (isSpecial(this.url)) {
    if (c === 92) {	    if (c === 92) {
      this.parseError = true;	      this.parseError = true;
    }	    }
    this.state = "path";	    this.state = "path";

    if (c !== 47 && c !== 92) {	    if (c !== 47 && c !== 92) {
      --this.pointer;	      --this.pointer;
    }	    }
  } else if (!this.stateOverride && c === 63) {	  } else if (!this.stateOverride && c === 63) {
    this.url.query = "";	    this.url.query = "";
    this.state = "query";	    this.state = "query";
  } else if (!this.stateOverride && c === 35) {	  } else if (!this.stateOverride && c === 35) {
    this.url.fragment = "";	    this.url.fragment = "";
    this.state = "fragment";	    this.state = "fragment";
  } else if (c !== undefined) {	  } else if (c !== undefined) {
    this.state = "path";	    this.state = "path";
    if (c !== 47) {	    if (c !== 47) {
      --this.pointer;	      --this.pointer;
    }	    }
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse path"] = function parsePath(c) {	URLStateMachine.prototype["parse path"] = function parsePath(c) {
  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||	  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||
      (!this.stateOverride && (c === 63 || c === 35))) {	      (!this.stateOverride && (c === 63 || c === 35))) {
    if (isSpecial(this.url) && c === 92) {	    if (isSpecial(this.url) && c === 92) {
      this.parseError = true;	      this.parseError = true;
    }	    }

    if (isDoubleDot(this.buffer)) {	    if (isDoubleDot(this.buffer)) {
      shortenPath(this.url);	      shortenPath(this.url);
      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {	      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {
        this.url.path.push("");	        this.url.path.push("");
      }	      }
    } else if (isSingleDot(this.buffer) && c !== 47 &&	    } else if (isSingleDot(this.buffer) && c !== 47 &&
               !(isSpecial(this.url) && c === 92)) {	               !(isSpecial(this.url) && c === 92)) {
      this.url.path.push("");	      this.url.path.push("");
    } else if (!isSingleDot(this.buffer)) {	    } else if (!isSingleDot(this.buffer)) {
      if (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {	      if (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {
        if (this.url.host !== "" && this.url.host !== null) {	        if (this.url.host !== "" && this.url.host !== null) {
          this.parseError = true;	          this.parseError = true;
          this.url.host = "";	          this.url.host = "";
        }	        }
        this.buffer = this.buffer[0] + ":";	        this.buffer = this.buffer[0] + ":";
      }	      }
      this.url.path.push(this.buffer);	      this.url.path.push(this.buffer);
    }	    }
    this.buffer = "";	    this.buffer = "";
    if (this.url.scheme === "file" && (c === undefined || c === 63 || c === 35)) {	    if (this.url.scheme === "file" && (c === undefined || c === 63 || c === 35)) {
      while (this.url.path.length > 1 && this.url.path[0] === "") {	      while (this.url.path.length > 1 && this.url.path[0] === "") {
        this.parseError = true;	        this.parseError = true;
        this.url.path.shift();	        this.url.path.shift();
      }	      }
    }	    }
    if (c === 63) {	    if (c === 63) {
      this.url.query = "";	      this.url.query = "";
      this.state = "query";	      this.state = "query";
    }	    }
    if (c === 35) {	    if (c === 35) {
      this.url.fragment = "";	      this.url.fragment = "";
      this.state = "fragment";	      this.state = "fragment";
    }	    }
  } else {	  } else {
    // TODO: If c is not a URL code point and not "%", parse error.	    // TODO: If c is not a URL code point and not "%", parse error.

    if (c === 37 &&	    if (c === 37 &&
      (!isASCIIHex(this.input[this.pointer + 1]) ||	      (!isASCIIHex(this.input[this.pointer + 1]) ||
        !isASCIIHex(this.input[this.pointer + 2]))) {	        !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;	      this.parseError = true;
    }	    }

    this.buffer += percentEncodeChar(c, isPathPercentEncode);	    this.buffer += percentEncodeChar(c, isPathPercentEncode);
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse cannot-be-a-base-URL path"] = function parseCannotBeABaseURLPath(c) {	URLStateMachine.prototype["parse cannot-be-a-base-URL path"] = function parseCannotBeABaseURLPath(c) {
  if (c === 63) {	  if (c === 63) {
    this.url.query = "";	    this.url.query = "";
    this.state = "query";	    this.state = "query";
  } else if (c === 35) {	  } else if (c === 35) {
    this.url.fragment = "";	    this.url.fragment = "";
    this.state = "fragment";	    this.state = "fragment";
  } else {	  } else {
    // TODO: Add: not a URL code point	    // TODO: Add: not a URL code point
    if (!isNaN(c) && c !== 37) {	    if (!isNaN(c) && c !== 37) {
      this.parseError = true;	      this.parseError = true;
    }	    }

    if (c === 37 &&	    if (c === 37 &&
        (!isASCIIHex(this.input[this.pointer + 1]) ||	        (!isASCIIHex(this.input[this.pointer + 1]) ||
         !isASCIIHex(this.input[this.pointer + 2]))) {	         !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;	      this.parseError = true;
    }	    }

    if (!isNaN(c)) {	    if (!isNaN(c)) {
      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);	      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);
    }	    }
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse query"] = function parseQuery(c, cStr) {	URLStateMachine.prototype["parse query"] = function parseQuery(c, cStr) {
  if (isNaN(c) || (!this.stateOverride && c === 35)) {	  if (isNaN(c) || (!this.stateOverride && c === 35)) {
    if (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") {	    if (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") {
      this.encodingOverride = "utf-8";	      this.encodingOverride = "utf-8";
    }	    }

    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead	    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead
    for (let i = 0; i < buffer.length; ++i) {	    for (let i = 0; i < buffer.length; ++i) {
      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||	      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||
          buffer[i] === 0x3C || buffer[i] === 0x3E) {	          buffer[i] === 0x3C || buffer[i] === 0x3E) {
        this.url.query += percentEncode(buffer[i]);	        this.url.query += percentEncode(buffer[i]);
      } else {	      } else {
        this.url.query += String.fromCodePoint(buffer[i]);	        this.url.query += String.fromCodePoint(buffer[i]);
      }	      }
    }	    }

    this.buffer = "";	    this.buffer = "";
    if (c === 35) {	    if (c === 35) {
      this.url.fragment = "";	      this.url.fragment = "";
      this.state = "fragment";	      this.state = "fragment";
    }	    }
  } else {	  } else {
    // TODO: If c is not a URL code point and not "%", parse error.	    // TODO: If c is not a URL code point and not "%", parse error.
    if (c === 37 &&	    if (c === 37 &&
      (!isASCIIHex(this.input[this.pointer + 1]) ||	      (!isASCIIHex(this.input[this.pointer + 1]) ||
        !isASCIIHex(this.input[this.pointer + 2]))) {	        !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;	      this.parseError = true;
    }	    }

    this.buffer += cStr;	    this.buffer += cStr;
  }	  }

  return true;	  return true;
};	};

URLStateMachine.prototype["parse fragment"] = function parseFragment(c) {	URLStateMachine.prototype["parse fragment"] = function parseFragment(c) {
  if (isNaN(c)) { // do nothing	  if (isNaN(c)) { // do nothing
  } else if (c === 0x0) {	  } else if (c === 0x0) {
    this.parseError = true;	    this.parseError = true;
  } else {	  } else {
    // TODO: If c is not a URL code point and not "%", parse error.	    // TODO: If c is not a URL code point and not "%", parse error.
    if (c === 37 &&	    if (c === 37 &&
      (!isASCIIHex(this.input[this.pointer + 1]) ||	      (!isASCIIHex(this.input[this.pointer + 1]) ||
        !isASCIIHex(this.input[this.pointer + 2]))) {	        !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;	      this.parseError = true;
    }	    }

    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);	    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);
  }	  }

  return true;	  return true;
};	};

function serializeURL(url, excludeFragment) {	function serializeURL(url, excludeFragment) {
  let output = url.scheme + ":";	  let output = url.scheme + ":";
  if (url.host !== null) {	  if (url.host !== null) {
    output += "//";	    output += "//";

    if (url.username !== "" || url.password !== "") {	    if (url.username !== "" || url.password !== "") {
      output += url.username;	      output += url.username;
      if (url.password !== "") {	      if (url.password !== "") {
        output += ":" + url.password;	        output += ":" + url.password;
      }	      }
      output += "@";	      output += "@";
    }	    }

    output += serializeHost(url.host);	    output += serializeHost(url.host);

    if (url.port !== null) {	    if (url.port !== null) {
      output += ":" + url.port;	      output += ":" + url.port;
    }	    }
  } else if (url.host === null && url.scheme === "file") {	  } else if (url.host === null && url.scheme === "file") {
    output += "//";	    output += "//";
  }	  }

  if (url.cannotBeABaseURL) {	  if (url.cannotBeABaseURL) {
    output += url.path[0];	    output += url.path[0];
  } else {	  } else {
    for (const string of url.path) {	    for (const string of url.path) {
      output += "/" + string;	      output += "/" + string;
    }	    }
  }	  }

  if (url.query !== null) {	  if (url.query !== null) {
    output += "?" + url.query;	    output += "?" + url.query;
  }	  }

  if (!excludeFragment && url.fragment !== null) {	  if (!excludeFragment && url.fragment !== null) {
    output += "#" + url.fragment;	    output += "#" + url.fragment;
  }	  }

  return output;	  return output;
}	}

function serializeOrigin(tuple) {	function serializeOrigin(tuple) {
  let result = tuple.scheme + "://";	  let result = tuple.scheme + "://";
  result += serializeHost(tuple.host);	  result += serializeHost(tuple.host);

  if (tuple.port !== null) {	  if (tuple.port !== null) {
    result += ":" + tuple.port;	    result += ":" + tuple.port;
  }	  }

  return result;	  return result;
}	}

module.exports.serializeURL = serializeURL;	module.exports.serializeURL = serializeURL;

module.exports.serializeURLOrigin = function (url) {	module.exports.serializeURLOrigin = function (url) {
  // https://url.spec.whatwg.org/#concept-url-origin	  // https://url.spec.whatwg.org/#concept-url-origin
  switch (url.scheme) {	  switch (url.scheme) {
    case "blob":	    case "blob":
      try {	      try {
        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));	        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));
      } catch (e) {	      } catch (e) {
        // serializing an opaque origin returns "null"	        // serializing an opaque origin returns "null"
        return "null";	        return "null";
      }	      }
    case "ftp":	    case "ftp":
    case "gopher":	    case "gopher":
    case "http":	    case "http":
    case "https":	    case "https":
    case "ws":	    case "ws":
    case "wss":	    case "wss":
      return serializeOrigin({	      return serializeOrigin({
        scheme: url.scheme,	        scheme: url.scheme,
        host: url.host,	        host: url.host,
        port: url.port	        port: url.port
      });	      });
    case "file":	    case "file":
      // spec says "exercise to the reader", chrome says "file://"	      // spec says "exercise to the reader", chrome says "file://"
      return "file://";	      return "file://";
    default:	    default:
      // serializing an opaque origin returns "null"	      // serializing an opaque origin returns "null"
      return "null";	      return "null";
  }	  }
};	};

module.exports.basicURLParse = function (input, options) {	module.exports.basicURLParse = function (input, options) {
  if (options === undefined) {	  if (options === undefined) {
    options = {};	    options = {};
  }	  }

  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);	  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);
  if (usm.failure) {	  if (usm.failure) {
    return "failure";	    return "failure";
  }	  }

  return usm.url;	  return usm.url;
};	};

module.exports.setTheUsername = function (url, username) {	module.exports.setTheUsername = function (url, username) {
  url.username = "";	  url.username = "";
  const decoded = punycode.ucs2.decode(username);	  const decoded = punycode.ucs2.decode(username);
  for (let i = 0; i < decoded.length; ++i) {	  for (let i = 0; i < decoded.length; ++i) {
    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);	    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
  }	  }
};	};

module.exports.setThePassword = function (url, password) {	module.exports.setThePassword = function (url, password) {
  url.password = "";	  url.password = "";
  const decoded = punycode.ucs2.decode(password);	  const decoded = punycode.ucs2.decode(password);
  for (let i = 0; i < decoded.length; ++i) {	  for (let i = 0; i < decoded.length; ++i) {
    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);	    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
  }	  }
};	};

module.exports.serializeHost = serializeHost;	module.exports.serializeHost = serializeHost;

module.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;	module.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;

module.exports.serializeInteger = function (integer) {	module.exports.serializeInteger = function (integer) {
  return String(integer);	  return String(integer);
};	};

module.exports.parseURL = function (input, options) {	module.exports.parseURL = function (input, options) {
  if (options === undefined) {	  if (options === undefined) {
    options = {};	    options = {};
  }	  }

  // We don't handle blobs, so this just delegates:	  // We don't handle blobs, so this just delegates:
  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });	  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });
};	};




/***/ }),	/***/ }),
 16  
package-lock.json
@@ -1,12 +1,12 @@
{	{
  "name": "stale-action",	  "name": "stale-action",
  "version": "2.0.0",	  "version": "7.0.0",
  "lockfileVersion": 2,	  "lockfileVersion": 2,
  "requires": true,	  "requires": true,
  "packages": {	  "packages": {
    "": {	    "": {
      "name": "stale-action",	      "name": "stale-action",
      "version": "2.0.0",	      "version": "7.0.0",
      "license": "MIT",	      "license": "MIT",
      "dependencies": {	      "dependencies": {
        "@actions/core": "^1.10.0",	        "@actions/core": "^1.10.0",
@@ -9019,9 +9019,9 @@
      }	      }
    },	    },
    "node_modules/minimatch": {	    "node_modules/minimatch": {
      "version": "3.0.4",	      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",	      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",	      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,	      "dev": true,
      "dependencies": {	      "dependencies": {
        "brace-expansion": "^1.1.7"	        "brace-expansion": "^1.1.7"
@@ -18241,9 +18241,9 @@
      "dev": true	      "dev": true
    },	    },
    "minimatch": {	    "minimatch": {
      "version": "3.0.4",	      "version": "3.1.2",
      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.0.4.tgz",	      "resolved": "https://registry.npmjs.org/minimatch/-/minimatch-3.1.2.tgz",
      "integrity": "sha512-yJHVQEhyqPLUTgt9B83PXu6W3rx4MvvHvSUvToogpwoGDOUQ+yDrR0HRot+yOCdCO7u4hX3pWft6kWBBcqh0UA==",	      "integrity": "sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==",
      "dev": true,	      "dev": true,
      "requires": {	      "requires": {
        "brace-expansion": "^1.1.7"	        "brace-expansion": "^1.1.7"
 13  
package.json
@@ -1,24 +1,23 @@
{	{
  "name": "stale-action",	  "name": "stale-action",
  "version": "2.0.0",	  "version": "7.0.0",
  "private": true,	  "private": true,
  "description": "Marks old issues and PRs as stale",	  "description": "Marks old issues and PRs as stale",
  "main": "lib/main.js",	  "main": "lib/main.js",
  "scripts": {	  "scripts": {
    "build": "tsc --project tsconfig.app.json",	    "build": "tsc --project tsconfig.app.json && ncc build",
    "format": "prettier --write --ignore-unknown **/*.{json,yml,ts}",	    "format": "prettier --write --ignore-unknown **/*.{json,yml,ts}",
    "format-check": "prettier --check --ignore-unknown **/*.{json,yml,ts}",	    "format-check": "prettier --check --ignore-unknown **/*.{json,yml,ts}",
    "lint": "eslint src/**/*.ts",	    "lint": "eslint src/**/*.ts",
    "lint:fix": "eslint src/**/*.ts --fix",	    "lint:fix": "eslint src/**/*.ts --fix",
    "lint:all": "npm run format-check && npm run lint",	    "lint:all": "npm run format-check && npm run lint",
    "lint:all:fix": "npm run format && npm run lint:fix",	    "lint:all:fix": "npm run format && npm run lint:fix",
    "pack": "ncc build",	    "test": "jest --config ./jest.config.js",
    "test": "jest",	
    "test:only-errors": "jest --reporters jest-silent-reporter --silent",	    "test:only-errors": "jest --reporters jest-silent-reporter --silent",
    "test:watch": "jest --watch --notify --expand",	    "test:watch": "jest --watch --notify --expand",
    "all": "npm run build && npm run format && npm run lint && npm run pack && npm test",	    "all": "npm run format && npm run lint && npm run build && npm test",
    "all:ci": "npm run build && npm run lint:all && npm run pack && npm run test:only-errors",	    "all:ci": "npm run format && npm run lint && npm run build && npm run test:only-errors",
    "prerelease": "npm run build && npm run pack",	    "prerelease": "npm run build",
    "release": "standard-version",	    "release": "standard-version",
    "release:dry-run": "standard-version --dry-run"	    "release:dry-run": "standard-version --dry-run"
  },	  },
  24  
src/classes/issues-processor.ts
@@ -321,9 +321,9 @@ export class IssuesProcessor {
    }	    }


    if (issue.isStale) {	    if (issue.isStale) {
      issueLogger.info(`This $$type has a stale label`);	      issueLogger.info(`This $$type includes a stale label`);
    } else {	    } else {
      issueLogger.info(`This $$type hasn't a stale label`);	      issueLogger.info(`This $$type does not include a stale label`);
    }	    }


    const exemptLabels: string[] = wordsToList(	    const exemptLabels: string[] = wordsToList(
@@ -332,17 +332,16 @@ export class IssuesProcessor {
        : this.options.exemptIssueLabels	        : this.options.exemptIssueLabels
    );	    );


    if (	    const hasExemptLabel = exemptLabels.some((exemptLabel: Readonly<string>) =>
      exemptLabels.some((exemptLabel: Readonly<string>): boolean =>	      isLabeled(issue, exemptLabel)
        isLabeled(issue, exemptLabel)	    );
      )	
    ) {	
      if (issue.isStale) {	
        issueLogger.info(`An exempt label was added after the stale label.`);	
        await this._removeStaleLabel(issue, staleLabel);	
      }	


      issueLogger.info(`Skipping this $$type because it has an exempt label`);	    if (hasExemptLabel) {
      issueLogger.info(
        `Skipping this $$type because it contains an exempt label, see ${issueLogger.createOptionLink(
          issue.isPullRequest ? Option.ExemptPrLabels : Option.ExemptIssueLabels
        )} for more details`
      );
      IssuesProcessor._endIssueProcessing(issue);	      IssuesProcessor._endIssueProcessing(issue);
      return; // Don't process exempt issues	      return; // Don't process exempt issues
    }	    }
@@ -427,6 +426,7 @@ export class IssuesProcessor {
    // Determine if this issue needs to be marked stale first	    // Determine if this issue needs to be marked stale first
    if (!issue.isStale) {	    if (!issue.isStale) {
      issueLogger.info(`This $$type is not stale`);	      issueLogger.info(`This $$type is not stale`);

      const shouldIgnoreUpdates: boolean = new IgnoreUpdates(	      const shouldIgnoreUpdates: boolean = new IgnoreUpdates(
        this.options,	        this.options,
        issue	        issue
0 comments on commit 458b6cd
@zakwarlord7
 
Add heading textAdd bold text, <Ctrl+b>Add italic text, <Ctrl+i>
Add a quote, <Ctrl+Shift+.>Add code, <Ctrl+e>Add a link, <Ctrl+k>
Add a bulleted list, <Ctrl+Shift+8>Add a numbered list, <Ctrl+Shift+7>Add a task list, <Ctrl+Shift+l>
Directly mention a user or team
Reference an issue, pull request, or discussion
Add saved reply
Leave a comment
No file chosen
Attach files by dragging & dropping, selecting or pasting them.
Styling with Markdown is supported
 Youâ€™re not receiving notifications from this thread.
Footer
Â© 2022 GitHub, Inc.
Footer navigation
Terms
Privacy
Security
Status
Docs
Contact GitHub
Pricing
API
Training
Blog
About
Merge branch 'actions:main' into main Â· zakwarlord7/slate.yml@458b6cd
